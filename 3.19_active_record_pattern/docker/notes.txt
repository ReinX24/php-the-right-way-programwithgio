To run application, open the docker desktop application

Go to docker directory and run the following command to start the application:

docker-compose up

To stop the container, simply press Ctrl + C

Composer tutorial: https://youtu.be/rqzYdHdyMH0?si=zTqwV0PTCwJHFVPJ

To update Docker image and run in background, run the following command:

docker-compose up -d --build

To update the docker container when we change something, run the following:

docker-compose build

SSH into docker container:

docker exec -it programwithgio-app bash

Once we are in our container, we can then install packages:

composer require ramsey/uuid

To regenerate composer files (edited composer.json), use the following command:

composer dump-autoload

For optimized autoloading, use the following command:

composer dump-autoload -o

If we ever decided to delete a dependency, we can use the following command to 
update the composer dependencies:

composer update

To access the database using docker, input the following commands:
docker exec -it mysql-db bash

To access, type in the following command and enter the passowrd:
mysql -u root -p

Adding phpdotenv for environment variables using composer
composer require vlucas/phpdotenv

Link for mailhog webpage
localhost:8025

Doctrine Commands:

Creating migration class
./vendor/bin/doctrine-migrations generate

Migrating classes after generating, this generates the tables in the database
./vendor/bin/doctrine-migrations migrate

Rollback migrations to the first version
./vendor/bin/doctrine-migrations migrate first

Check the status of the migrations
./vendor/bin/doctrine-migrations status

Generate migration file using entities, migrate after generating to show in db
./vendor/bin/doctrine-migrations diff
